[{"D:\\Calculator\\calculator-master\\calculator-master\\src\\index.js":"1","D:\\Calculator\\calculator-master\\calculator-master\\src\\App.js":"2","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\Button.js":"3","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\Input.js":"4","D:\\Calculator\\calculator-master\\calculator-master\\src\\contexts\\onInput.js":"5","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\Clear.js":"6","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\SignButton.js":"7","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\RootButton.js":"8","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\handleSqareRoot.js":"9"},{"size":146,"mtime":1612591904721,"results":"10","hashOfConfig":"11"},{"size":5504,"mtime":1612980354275,"results":"12","hashOfConfig":"11"},{"size":484,"mtime":1612981104786,"results":"13","hashOfConfig":"11"},{"size":284,"mtime":1612591904947,"results":"14","hashOfConfig":"11"},{"size":115,"mtime":1612591904971,"results":"15","hashOfConfig":"11"},{"size":377,"mtime":1612591904843,"results":"16","hashOfConfig":"11"},{"size":207,"mtime":1612975789085,"results":"17","hashOfConfig":"11"},{"size":202,"mtime":1612976020275,"results":"18","hashOfConfig":"11"},{"size":211,"mtime":1612976762406,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15qr1uh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"D:\\Calculator\\calculator-master\\calculator-master\\src\\index.js",[],["43","44"],"D:\\Calculator\\calculator-master\\calculator-master\\src\\App.js",["45","46","47","48"],"import React, { useState } from 'react';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport Clear from './components/Clear';\nimport updateInputContext from './contexts/onInput';\nimport './App.css';\nimport SignButton from './components/SignButton'\nimport handleRootButton from './components/RootButton'\nimport handleSqareRoot from './components/handleSqareRoot'\n\nconst App = () => {\n\n    let [input, changeInput] = useState('');\n    let [previousNumber, updatePreviousNumber] = useState(0);\n    let [operator, updateOperator] = useState('');\n    let [buttons,updateButton]=useState(false);\n    let [LightTheme,updateTheme]=useState(true)\n\n    const addToInput = element => {\n        switch (element) {\n            case 'CLEAR': {\n                updateState('', 0, ''); // reset \n                break;\n            }\n            case '0': {\n                if (input)\n                    updateState(input + element); // append if some input exists\n                break;\n            }\n            case '.': {\n                if (!input.includes(element))\n                    updateState(input + element); // append ONLY 1 decimal for a operand\n                break;\n            }\n            case '/':\n            case '*':\n            case '+':\n            case '-': {\n                if (input) {\n                    if (previousNumber) {  // UNSAFE OPERATION ( pressed without pressing = )\n                        let result = getResult({ previousNumber, operator, input });\n                        updateState('', result, element); //reset input, store result in previous number\n                    }\n                    else   // SAFE OPERATION (pressed first time OR after pressing = )\n                        updateState('', input, element); //reset input, store input in previous number\n                }\n                break;\n            }\n            case '=': {\n                if (previousNumber && input) {\n                    let result = getResult({ previousNumber, operator, input });\n                    updateState(result, 0, ''); //store result in input, reset previous number and operand\n                }\n                break;\n            }\n            default:\n                updateState(input + element);  //append to input\n        }\n    }\n\n    const updateState = (Input = input, PreviousNumber = previousNumber, Operator = operator) => {\n        changeInput(Input);\n        updatePreviousNumber(PreviousNumber);\n        updateOperator(Operator);\n    };\n\n    const getResult = ({ previousNumber, operator, input }) => {\n        return String(eval(previousNumber + operator + input));\n    }\n\n    const handleClick=()=>{\n        if(buttons){\n            updateButton(false)   \n        }\n        else\n        updateButton(true)   \n\n    }\n\n    const handleSigntificButton=()=>{\n        return(\n           \n            <div className=\"row\">\n                <button onClick={handleSignButton}>Sign</button>\n                <button onClick={handleRootButton}>Sqaure</button>\n                <button onClick={handleSqareRoot}>sqaure root</button>\n            </div>\n            \n        )\n    }\n\n    const handleSignButton=()=>{\n        console.log(\"sign\")\n        changeInput(-(input))\n    }\n\n    const handleRootButton=()=>{   \n        changeInput(input*input)\n    }\n\n    const handleSqareRoot=()=>{\n        changeInput(Math.sqrt(input))  \n    }\n\n    const DarkTheme=()=>{ \n            updateTheme(false)   \n    }\n\n    const Light=()=>{\n        updateTheme(true)\n    }\n\n    return ( \n       <div>\n           <div className={\"\" +(LightTheme ? 'lightTheme':'darkTheme '  )}>\n            <updateInputContext.Provider value={addToInput} >\n                <div className='calc-wrapper'>\n                <button onClick={DarkTheme}> DarkTheme</button>\n                <button onClick={(Light)}>LightTheme</button>\n                    <div className='row'>\n                        <Input>{input}</Input>\n                    </div>\n                    <div className='row'>\n                        <Button>7</Button>\n                        <Button>8</Button>\n                        <Button>9</Button>\n                        <Button>/</Button>\n                    </div>\n                    <div className='row'>\n                        <Button>4</Button>\n                        <Button>5</Button>\n                        <Button>6</Button>\n                        <Button>*</Button>\n                    </div>\n                    <div className='row'>\n                        <Button>1</Button>\n                        <Button>2</Button>\n                        <Button>3</Button>\n                        <Button>+</Button>\n                    </div>\n                    <div className='row'>\n                        <Button>.</Button>\n                        <Button>0</Button>\n                        <Button>=</Button>\n                        <Button>-</Button>\n                    </div>\n                    <div className='row'>\n                        \n                        <Clear>CLEAR</Clear>\n                    </div>\n                    <div class=\"row\">\n                    <button onClick={handleClick}>Scientific Mode</button>\n                    </div> \n                    { buttons&& handleSigntificButton() }\n\n                    \n                    \n                </div>\n                \n                \n            </updateInputContext.Provider>\n         \n            </div>\n        </div>\n    );\n\n};\n\nexport default App;","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\Button.js",[],"D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\Input.js",[],"D:\\Calculator\\calculator-master\\calculator-master\\src\\contexts\\onInput.js",[],"D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\Clear.js",[],"D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\SignButton.js",["49"],"import React, { Component } from 'react'\r\n\r\n\r\nconst SignButton =(props)=>{\r\n\r\n    return(\r\n        <div>\r\n          \r\n                {props.sign()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignButton\r\n\r\n","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\RootButton.js",["50"],"import React, { Component } from 'react'\r\n\r\nconst RootButton =(props)=>{\r\n    return(\r\n        <div> \r\n                {props.handleRootButton()}\r\n        </div>\r\n    )\r\n}\r\nexport default RootButton\r\n\r\n","D:\\Calculator\\calculator-master\\calculator-master\\src\\components\\handleSqareRoot.js",["51"],"import React, { Component } from 'react'\r\n\r\nconst handleSqareRoot =(props)=>{\r\n    return(\r\n        <div> \r\n                {props.handleSqareRoot()}\r\n        </div>\r\n    )\r\n}\r\nexport default handleSqareRoot\r\n\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":8,"column":8,"nodeType":"58","messageId":"59","endLine":8,"endColumn":24},{"ruleId":"56","severity":1,"message":"61","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":68,"column":23,"nodeType":"64","messageId":"65","endLine":68,"endColumn":27},{"ruleId":"56","severity":1,"message":"66","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"66","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"66","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'SignButton' is defined but never used.","Identifier","unusedVar","'handleRootButton' is defined but never used.","'handleSqareRoot' is defined but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]